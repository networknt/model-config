openapi: 3.0.0

info:
  title: Kafka producer and consumer microservice
  version: 1.0.0
  description: |-
    # Kafka producer and consumer service
servers:
  - url: https://kafka.networknt.com

paths:
  /producer/{topic}:
    post:
      operationId: postData
      summary: Post a list of key/value pair to Kafka
      parameters:
        - name: topic
          in: path
          required: true
          description: The kafka topic name
          schema:
            type: string
      requestBody:
        description: message data
        required: true
        content:
          application/json:
            schema: 
              type: array
              items: 
                $ref: '#/components/schemas/KeyValue'
      responses:
        '200':
          description: Data successfully produced.
        '400':
          description: Unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Status"
      security:
        - kafka_auth:
            - kafka:w

  /consumer/{topic}:
    get:
      operationId: getData
      summary: Get a list of key/value pair from Kafka
      parameters:
        - name: topic
          in: path
          required: true
          description: The kafka topic name
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/KeyValue'
        '400':
          description: Unexpected error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Status"
      security:
        - kafka_auth:
            - kafka:r
components:
  securitySchemes:
    kafka_auth:
      type: oauth2
      description: This API uses OAuth 2.0 with the client credential grant flow.
      flows:
        clientCredentials:
          tokenUrl: 'https://localhost:6882/token'
          scopes:
            kafka:w: Kafka producer
            kafka:r: Kafka consumer
  schemas:
    Status:
      type: object
      properties:
        statusCode: 
          description: HTTP response code
          type: integer
        code:
          description: Code is the machine-readable error code
          type: string
        message:
          description: Error messsage
          type: string
        description: 
          description: The detailed description of the error status  
          type: string
      required:
      - statusCode
      - code
    KeyValue:
      type: object
      properties:
        key: 
          description: Kafka record key
          type: string
        value:
          description: Kafka record value
          type: string
      required:
      - key
      - value
