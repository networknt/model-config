openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger ExecFlow
  license:
    name: MIT
servers:
  - url: 'http://execflow.swagger.io/v1'
paths:
  /control:
    get:
      summary: List all services
      operationId: listAllServices
      tags:
        - services
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max  5)
          required: false
          schema:
            type: integer
            format: int32
      security:
        - execflow_auth:
            - 'read:services'
      responses:
        '200':
          description: An paged array of services
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceCfg'
              example:
                - id: 1
                  name: Input850QueueService
                  tag: InputQueueService
                - id: 2
                  name: Input850FileService
                  tag: InputFileService
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/control/{serviceName}':
    get:
      summary: List one services
      operationId: listOneServices
      tags:
        - services
      parameters:
        - name: serviceName
          in: query
          description: Service name
          required: true
          schema:
            type: string
      security:
        - execflow_auth:
            - 'read:services'
      responses:
        '200':
          description: Single service
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceCfg'
              example:
                - id: 1
                  name: Input850QueueService
                  tag: InputQueueService
                - id: 2
                  name: Input850FileService
                  tag: InputFileService
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create/start a services
      operationId: startServices
      requestBody:
        description: Services to be started
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCfg'
      tags:
        - services
      security:
        - execflow_auth:
            - 'read:services'
            - 'write:services'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update service
      operationId: updateServices
      requestBody:
        description: Start, stop, restart service
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCfg'
      tags:
        - services
      security:
        - execflow_auth:
            - 'read:services'
            - 'write:services'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    execflow_auth:
      type: oauth2
      description: This API uses OAuth 2 with the client credential grant flow.
      flows:
        clientCredentials:
          tokenUrl: 'https://localhost:6882/token'
          scopes:
            'write:services': modify pets in your account
            'read:services': read your pets

  schemas:
    ServiceMap:
      type: object
      properties:
        keyValue:
          type: string
    ServiceCfg:
      type: object
      required:
        - name
        - service
        - runLevel
        - startOnBoot
        - valueType
      properties:
        name:
          type: string
        service:
          type: string
        runLevel:
          type: string
        startOnBoot:
          type: string
        valueType:
          type: string
        map:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schema/ServiceMap'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
