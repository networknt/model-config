---
openapi: "3.0.1"
servers:
- description: "Light Config Server"
  url: "https://config.neworknt.com/config-server"
info:
  description: "Light Config Server API"
  version: "1.0.0"
  title: "Light Config Server API"
  contact:
    email: "steve.hu@gmail.com"
tags:
- name: "config-server"
  description: "Operations available in config server"
paths:
  /configs:
    get:
      tags:
      - "config-server"
      summary: "Get service configs for the specified host, productId, productVersion,\
        \ apiId, apiVersion and envTag."
      operationId: "getServiceConfigs"
      parameters:
      - in: "query"
        name: "host"
        description: "host for the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "productId"
        description: "productId for the service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "productVersion"
        description: "ProductVersion for the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "apiId"
        description: "ApiId of the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "apiVersion"
        description: "ApiVersion of the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "envTag"
        description: "EnvTag of the service"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns service configs for the specified productId, productVersion,\
            \ apiId, apiVersion and envTag."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        default:
          description: "unexpected error"
        "400":
          description: "bad request"
      security:
      - portal_auth:
        - "portal.r"
  /certs:
    get:
      tags:
      - "config-server"
      summary: "Get certificates for the specified cap, project, project version,\
        \ service, service version and environment."
      operationId: "getServiceCertificates"
      parameters:
      - in: "query"
        name: "host"
        description: "host for the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "productId"
        description: "productId for the service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "productVersion"
        description: "ProductVersion for the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "apiId"
        description: "ApiId of the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "apiVersion"
        description: "ApiVersion of the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "envTag"
        description: "EnvTag of the service"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns certificates for the specified project, project version,\
            \ service, service version and environment. File content is returned as\
            \ Base64 encoded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        default:
          description: "unexpected error"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "portal.r"
  /files:
    get:
      tags:
      - "config-server"
      summary: "Get config files for the specified cap, project, project version,\
        \ service, service version and environment."
      operationId: "getServiceFiles"
      description: "Get config files for the specified cap, project, project version,\
        \ service, service version and environment. File content is returned as Base64\
        \ encoded."
      parameters:
      - in: "query"
        name: "host"
        description: "host for the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "productId"
        description: "productId for the service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "productVersion"
        description: "ProductVersion for the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "apiId"
        description: "ApiId of the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "apiVersion"
        description: "ApiVersion of the service"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "envTag"
        description: "EnvTag of the service"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns config files for the specified project, project version,\
            \ service, service version and environment. File content is returned as\
            \ Base64 encoded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        default:
          description: "unexpected error"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "portal.r"
components:
  securitySchemes:
    portal_auth:
      type: "oauth2"
      flows:
        clientCredentials:
          tokenUrl: "https://lightapi.net/token"
          scopes:
            portal.w: "write"
            portal.r: "read"
  schemas:
    Service:
      type: "object"
      required:
      - "host"
      - "product"
      - "productVersion"
      - "apiId"
      - "apiVersion"
      - "envTag"
      properties:
        host:
          type: "string"
          description: "Host for identifying the service"
        productId:
          type: "string"
          description: "ProductId for identifying the service"
        productVersion:
          type: "string"
          description: "ProductVersion for identfying the service"
        apiId:
          type: "string"
          description: "ApiId for identifying the service"
        apiVersion:
          type: "string"
          description: "Service version for identifying the service"
        envTag:
          type: "string"
          description: "EnvTag for identifying the service"
    ServiceConfigs:
      type: "object"
      required:
      - "service"
      properties:
        service:
          $ref: "#/components/schemas/Service"
        configProperties:
          type: "object"
          description: "Key-Value pairs of the config properties"
          additionalProperties: true
