---
openapi: "3.0.0"
servers:
- description: "Light Config Server"
  url: "https://config.neworknt.com/config-server"
info:
  description: "Light Config Server API"
  version: "1.0.0"
  title: "Light Config Server API"
  contact:
    email: "santosh.aherkar@gmail.com"
tags:
- name: "config-server"
  description: "Operations available in config server"
paths:
  /configs/property/ref:
    get:
      tags:
      - "config-server"
      summary: "Get reference data to populate the dropdown for property"
      operationId: "getPropertyRef"
      description: "Get property reference data with query parameters"
      parameters:
      - in: "query"
        name: "name"
        description: "The name of the reference data"
        required: true
        schema:
          type: "string"
          enum:
          - "host"
          - "module"
          - "scope"
          - "key"
      - in: "query"
        name: "host"
        description: "The selected host as parameter for module and scope"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "module"
        description: "The selected module as parameter for scope"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "List of key/value map"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Reference"
        "400":
          description: "Bad Request"
  /configs/property/search:
    post:
      tags:
      - "config-server"
      summary: "Search property key and value pairs with module and optional scope."
      operationId: "postPropertySearch"
      description: "Search property key and value pairs based on module and scope."
      requestBody:
        description: "Search Criteria"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PropertyCriteria"
        required: true
      responses:
        "200":
          description: "Returns a list of defined properties in the config server\
            \ per module and optional scope"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Property"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.r"
  /configs/property:
    post:
      tags:
      - "config-server"
      summary: "Create configs property key."
      operationId: "postConfigsProperty"
      description: "Create configs property key."
      requestBody:
        description: "Property Detail"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Property"
        required: true
      responses:
        "200":
          description: "Successfully create configs property key."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
    put:
      tags:
      - "config-server"
      summary: "Update configs property key definition."
      operationId: "putConfigsProperty"
      description: "Update configs property key defintion."
      requestBody:
        description: "Property Detail"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Property"
        required: true
      responses:
        "200":
          description: "Returns updated configs property key definition."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Property"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
    delete:
      tags:
      - "config-server"
      summary: "Delete configs property key definition."
      operationId: "deleteConfigProperty"
      description: "Delete configs property key definition."
      parameters:
      - in: "query"
        name: "host"
        description: "The host of property"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "module"
        description: "The module of property"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "scope"
        description: "The scope of the property"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "key"
        description: "The key of the property"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Configs Property"
        "400":
          description: "Bad request"
      security:
      - portal_auth:
        - "portal.w"
  /configs/global/ref:
    get:
      tags:
      - "config-server"
      summary: "Get reference data to populate the dropdown for global property"
      operationId: "getConfigsGlobalRef"
      description: "Get configs reference data with query parameters"
      parameters:
      - in: "query"
        name: "name"
        description: "The name of the reference data"
        required: true
        schema:
          type: "string"
          enum:
          - "project"
          - "projver"
          - "env"
      - in: "query"
        name: "host"
        description: "The selected host as a query parameter"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "module"
        description: "The selected module as a query parameter"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "project"
        description: "The selected project as a query parameter"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "projver"
        description: "The selected project version as a query parameter"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "env"
        description: "The environment as a query parameter"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "List of key/value map"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Reference"
        "400":
          description: "Bad Request"
  /configs/global/search:
    post:
      tags:
      - "config-server"
      summary: "Search global property key and value pairs with module, project, projver\
        \ and env."
      operationId: "postGlobalSearch"
      description: "Search global property key and value pairs based on module, project,\
        \ projver and env."
      requestBody:
        description: "Search Criteria"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalCriteria"
        required: true
      responses:
        "200":
          description: "Returns a list of defined global properties in the config\
            \ server per module, project and env"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GlobalProperty"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.r"
  /configs/global:
    post:
      tags:
      - "config-server"
      summary: "Create global configs property key and value."
      operationId: "postConfigsGlobal"
      description: "Create global configs property key and value."
      requestBody:
        description: "Property Detail"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalProperty"
        required: true
      responses:
        "200":
          description: "Successfully create global configs property key and value."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalProperty"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
    put:
      tags:
      - "config-server"
      summary: "Update global configs property key and value."
      operationId: "putConfigsGlobalProperty"
      description: "Update global configs property key and value."
      requestBody:
        description: "Property Detail"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalProperty"
        required: true
      responses:
        "200":
          description: "Returns service configs property keys and values."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalProperty"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
    delete:
      tags:
      - "config-server"
      summary: "Delete global configs property key and value."
      operationId: "deleteConfigGlobalProperty"
      description: "Delete global configs property key and value."
      parameters:
      - in: "query"
        name: "host"
        description: "The host of property"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "module"
        description: "The module of property"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "project"
        description: "The project of the property"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "projver"
        description: "The project version of the property"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "service"
        description: "The service of the property"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "servver"
        description: "The service version of the property"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "env"
        description: "The environment of the property"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "key"
        description: "The key of the property"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Global Configs Property"
        "400":
          description: "Bad request"
      security:
      - portal_auth:
        - "portal.w"
  /configs/service/ref:
    get:
      tags:
      - "config-server"
      summary: "Get reference data to populate the dropdown for configs"
      operationId: "getConfigsServiceRef"
      description: "Get configs reference data with query parameters"
      parameters:
      - in: "query"
        name: "name"
        description: "The name of the reference data"
        required: true
        schema:
          type: "string"
          enum:
          - "project"
          - "projver"
          - "service"
          - "servver"
          - "env"
      - in: "query"
        name: "project"
        description: "The selected project as a query parameter"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "projver"
        description: "The selected project version as a query parameter"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "service"
        description: "The selected service as a query parameter"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "servver"
        description: "The selected service version as a query parameter"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "List of key/value map"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Reference"
        "400":
          description: "Bad Request"
  /configs/service/search:
    post:
      tags:
      - "config-server"
      summary: "Search service entity with module and other parameters."
      operationId: "postConfigServiceSearch"
      description: "Search service entity based on module and other parameters."
      requestBody:
        description: "Search Criteria"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceCriteria"
        required: true
      responses:
        "200":
          description: "Returns a list of defined service properties in the config\
            \ server identified by parameters"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Service"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.r"
  /configs/service:
    post:
      tags:
      - "config-server"
      summary: "Create a new service entity."
      operationId: "postConfigsService"
      description: "Create a new service entity."
      requestBody:
        description: "Service Detail"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Service"
        required: true
      responses:
        "200":
          description: "Successfully create a service."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
    put:
      tags:
      - "config-server"
      summary: "Update an existing service entity."
      operationId: "putConfigsService"
      description: "Update a service entity."
      requestBody:
        description: "Service Detail"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Service"
        required: true
      responses:
        "200":
          description: "Returns updated service entity."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
    delete:
      tags:
      - "config-server"
      summary: "Delete an existing service entity and all the service properties."
      operationId: "deleteConfigService"
      description: "Delete a service entity along with properties."
      parameters:
      - in: "query"
        name: "host"
        description: "The host of service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "module"
        description: "The module of service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "project"
        description: "The project of the service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "projver"
        description: "The project version of the service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "service"
        description: "The service of the service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "servver"
        description: "The service version of the service"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "env"
        description: "The environment of the service"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Service"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
  /configs/service/property:
    get:
      tags:
      - "config-server"
      summary: "Get all key/value pairs for a particular service"
      operationId: "getConfigsServiceProperty"
      description: "After clicking the detail button on the service list view, this\
        \ endpoint will get all the properties for the service"
      parameters:
      - in: "query"
        name: "sid"
        description: "host for the service"
        required: true
        schema:
          type: "integer"
      responses:
        "200":
          description: "List of properties for a service"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ServiceProperty"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.r"
    post:
      tags:
      - "config-server"
      summary: "Create a new service property."
      operationId: "postConfigsServiceProperty"
      description: "Create a new service property."
      requestBody:
        description: "Service Property"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceProperty"
        required: true
      responses:
        "200":
          description: "Successfully create a service property."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceProperty"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
    put:
      tags:
      - "config-server"
      summary: "Update an existing service property."
      operationId: "putConfigsServiceProperty"
      description: "Update a service property."
      requestBody:
        description: "Service Property"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceProperty"
        required: true
      responses:
        "200":
          description: "Returns updated service property."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceProperty"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
    delete:
      tags:
      - "config-server"
      summary: "Delete an existing service property."
      operationId: "deleteConfigServiceProperty"
      description: "Delete a service property."
      parameters:
      - in: "query"
        name: "sid"
        description: "The sid of service property"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "key"
        description: "The key of the service property"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Service Property"
        "400":
          description: "Bad Request"
      security:
      - portal_auth:
        - "portal.w"
  /configs/{project}/{projver}/{service}/{servver}/{env}:
    get:
      tags:
      - "config-server"
      summary: "Get service configs for the specified project, project version, service,\
        \ service version and environment."
      operationId: "getServiceConfigs"
      description: "Get service configs for the specified project, project version,\
        \ service, service version and environment."
      parameters:
      - in: "path"
        name: "project"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns service configs for the specified project, project\
            \ version, service, service version and environment."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad request"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
  /certs/{project}/{projver}/{service}/{servver}/{env}:
    get:
      tags:
      - "config-server"
      summary: "Get certificates for the specified project, project version, service,\
        \ service version and environment."
      operationId: "getServiceCertificates"
      description: "Get certificates for the specified project, project version, service,\
        \ service version and environment. File content is returned as Base64 encoded."
      parameters:
      - in: "path"
        name: "project"
        description: "project for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns certificates for the specified project, project version,\
            \ service, service version and environment. File content is returned as\
            \ Base64 encoded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    post:
      tags:
      - "config-server"
      summary: "create config certificates for the specified project, project version,\
        \ service, service version and environment."
      operationId: "postServiceCertificates"
      description: "create config certificates for the specified project, project\
        \ version, service, service version and environment."
      parameters:
      - in: "path"
        name: "project"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Create Certificates"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    put:
      tags:
      - "config-server"
      summary: "update config certificates for the specified project, project version,\
        \ service, service version and environment."
      operationId: "putServiceCertificates"
      description: "update config certificates for the specified project, project\
        \ version, service, service version and environment."
      parameters:
      - in: "path"
        name: "project"
        description: "project for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Update Certificates"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    delete:
      tags:
      - "config-server"
      summary: "Delete service certificates for the specified project, project version,\
        \ service, service version and environment."
      operationId: "deleteServiceCertificates"
      description: "Delete service certificates for the specified project, project\
        \ version, service, service version and environment."
      parameters:
      - in: "path"
        name: "project"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Certificates"
        "400":
          description: "Invalid Certificates Delete Request"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
  /files/{project}/{projver}/{service}/{servver}/{env}:
    get:
      tags:
      - "config-server"
      summary: "Get config files for the specified project, project version, service,\
        \ service version and environment."
      operationId: "getServiceFiles"
      description: "Get config files for the specified project, project version, service,\
        \ service version and environment. File content is returned as Base64 encoded."
      parameters:
      - in: "path"
        name: "project"
        description: "project for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns config files for the specified project, project version,\
            \ service, service version and environment. File content is returned as\
            \ Base64 encoded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    post:
      tags:
      - "config-server"
      summary: "create config files for the specified project, project version, service,\
        \ service version and environment."
      operationId: "postServiceFiles"
      description: "create config files for the specified project, project version,\
        \ service, service version and environment."
      parameters:
      - in: "path"
        name: "project"
        description: "project for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Create Files"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    put:
      tags:
      - "config-server"
      summary: "update config files for the specified project, project version, service,\
        \ service version and environment."
      operationId: "putServiceFiles"
      description: "update config files for the specified project, project version,\
        \ service, service version and environment."
      parameters:
      - in: "path"
        name: "project"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Update Certificates"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    delete:
      tags:
      - "config-server"
      summary: "Delete service files for the specified project, project version, service,\
        \ service version and environment."
      operationId: "deleteServiceFiles"
      description: "Delete service files for the specified project, project version,\
        \ service, service version and environment."
      parameters:
      - in: "path"
        name: "project"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "projver"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "servver"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "env"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Certificates"
        "400":
          description: "Invalid Certificates Delete Request"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
components:
  securitySchemes:
    portal_auth:
      type: "oauth2"
      flows:
        clientCredentials:
          tokenUrl: "https://lightapi.net/token"
          scopes:
            A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2: "default"
            portal.w: "write"
            portal.r: "read"
  schemas:
    Reference:
      type: "object"
      additionalProperties: true
    PropertyCriteria:
      type: "object"
      properties:
        host:
          type: "string"
          description: "Host of the properties"
        module:
          type: "string"
          description: "Module of the properties"
        scope:
          type: "string"
          description: "Scope of the properties"
    Property:
      type: "object"
      required:
      - "host"
      - "module"
      - "scope"
      - "key"
      - "order"
      properties:
        host:
          type: "string"
          description: "Host of the property"
        module:
          type: "string"
          description: "Module of the property"
        scope:
          type: "string"
          description: "Scope of the property"
        key:
          type: "string"
          description: "Key of the property"
        order:
          type: "integer"
          description: "Order of the property"
    GlobalCriteria:
      type: "object"
      required:
      - "host"
      - "module"
      properties:
        host:
          type: "string"
          description: "Host of the properties"
        module:
          type: "string"
          description: "Module of the properties"
        project:
          type: "string"
          description: "Project of the properties"
        projver:
          type: "string"
          description: "Project version of the properties"
        env:
          type: "string"
          description: "Environment of the properties"
    GlobalProperty:
      type: "object"
      required:
      - "host"
      - "module"
      - "key"
      - "value"
      properties:
        host:
          type: "string"
          description: "Host of the property"
        module:
          type: "string"
          description: "Module of the property"
        project:
          type: "string"
          description: "Project of the property"
        projver:
          type: "string"
          description: "Project version of the property"
        service:
          type: "string"
          description: "Service of the property"
        servver:
          type: "string"
          description: "Service version version of the property"
        env:
          type: "string"
          description: "Environment of the property"
        key:
          type: "string"
          description: "Key of the property"
        value:
          type: "string"
          description: "Value of the property"
    ServiceCriteria:
      type: "object"
      required:
      - "host"
      - "module"
      properties:
        host:
          type: "string"
          description: "Host of the properties"
        module:
          type: "string"
          description: "Module of the properties"
        project:
          type: "string"
          description: "Project of the properties"
        projver:
          type: "string"
          description: "Project version of the properties"
        service:
          type: "string"
          description: "Service of the properties"
        servver:
          type: "string"
          description: "Service version of the properties"
        env:
          type: "string"
          description: "Environment of the properties"
    ServiceProperty:
      type: "object"
      required:
      - "host"
      - "module"
      - "project"
      - "projver"
      - "service"
      - "servver"
      - "env"
      - "sid"
      - "key"
      - "value"
      properties:
        host:
          type: "string"
          description: "Host of the property"
        module:
          type: "string"
          description: "Module of the property"
        project:
          type: "string"
          description: "Project of the property"
        projver:
          type: "string"
          description: "Project version of the property"
        service:
          type: "string"
          description: "Service of the property"
        servver:
          type: "string"
          description: "Service version of the property"
        env:
          type: "string"
          description: "Environment of the property"
        sid:
          type: "integer"
          description: "Sid of the property"
        key:
          type: "string"
          description: "Key of the property"
        value:
          type: "string"
          description: "Value of the property"
    Service:
      type: "object"
      required:
      - "host"
      - "module"
      - "project"
      - "projver"
      - "service"
      - "servver"
      - "env"
      properties:
        host:
          type: "string"
          description: "Host for identifying the service"
        module:
          type: "string"
          description: "Module for identifying the service"
        project:
          type: "string"
          description: "Project for identifying the service"
        projver:
          type: "string"
          description: "Project version for identfying the service"
        service:
          type: "string"
          description: "Service name for identifying the service"
        servver:
          type: "string"
          description: "Service version for identifying the service"
        env:
          type: "string"
          description: "Environment for identifying the service"
    ServiceConfigs:
      type: "object"
      required:
      - "service"
      properties:
        service:
          $ref: "#/components/schemas/Service"
        configProperties:
          type: "object"
          description: "Key-Value pairs of the config properties"
          additionalProperties: true
