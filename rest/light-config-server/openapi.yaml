---
openapi: "3.0.0"
servers:
- description: "Light Config Server"
  url: "https://config.neworknt.com/config-server"
info:
  description: "Light Config Server API"
  version: "1.0.0"
  title: "Light Config Server API"
  contact:
    email: "santosh.aherkar@gmail.com"
tags:
- name: "config-server"
  description: "Operations available in config server"
paths:
  /services:
    get:
      tags:
      - "config-server"
      summary: "Search for registered services in the config server"
      operationId: "searchServices"
      description: "Search for registered services in the config server"
      parameters:
      - in: "query"
        name: "project_name"
        description: "an optional project name for filtering services"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "project_version"
        description: "an optional project version for filtering services"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "service_name"
        description: "an optional service name for filtering services"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "service_version"
        description: "an optional service version for filtering services"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "environment"
        description: "an optional environment for filtering services"
        required: false
        schema:
          type: "string"
      - in: "query"
        name: "offset"
        description: "record offset for pagination"
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 0
      - in: "query"
        name: "limit"
        description: "record limit for pagination"
        required: false
        schema:
          type: "integer"
          format: "int32"
          minimum: 0
          maximum: 50
      responses:
        "200":
          description: "List of registered services"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Service"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
  /configs/{module_name}/{project_name}/{project_version}/{service_name}/{service_version}/{environment}:
    get:
      tags:
      - "config-server"
      summary: "Get service configs for the specified project, project version, service,\
        \ service version and environment."
      operationId: "getServiceConfigs"
      description: "Get service configs for the specified project, project version,\
        \ service, service version and environment."
      parameters:
      - in: "path"
        name: "module_name"
        description: "module name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns service configs for the specified project, project\
            \ version, service, service version and environment."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad request"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
  /configs:
    get:
      tags:
      - "config-server"
      summary: "Get service configs property keys and values."
      operationId: "getServiceConfigsProperties"
      description: "Get service configs property keys and values."
      responses:
        "200":
          description: "Returns service configs property keys and values."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
  /configs/{type}:
    post:
      tags:
      - "config-server"
      summary: "Create service configs property keys and values."
      operationId: "postServiceConfigs"
      description: "Create service configs property keys and values."
      parameters:
      - in: "path"
        name: "type"
        description: "type for global configs"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successfully create service configs property keys and values."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
    put:
      tags:
      - "config-server"
      summary: "Update service configs property keys and values."
      operationId: "putServiceConfigs"
      description: "Update service configs property keys, generic values."
      parameters:
      - in: "path"
        name: "type"
        description: "type for global configs"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns service configs property keys and values."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
    delete:
      tags:
      - "config-server"
      summary: "Delete service configs property keys and values."
      operationId: "deleteServiceConfigs"
      description: "Delete service configs property keys and values."
      parameters:
      - in: "path"
        name: "type"
        description: "type for global configs"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Configs"
        "400":
          description: "Invalid Certificates Delete Request"
  /certs/{project_name}/{project_version}/{service_name}/{service_version}/{environment}:
    get:
      tags:
      - "config-server"
      summary: "Get certificates for the specified project, project version, service,\
        \ service version and environment."
      operationId: "getServiceCertificates"
      description: "Get certificates for the specified project, project version, service,\
        \ service version and environment. File content is returned as Base64 encoded."
      parameters:
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns certificates for the specified project, project version,\
            \ service, service version and environment. File content is returned as\
            \ Base64 encoded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    post:
      tags:
      - "config-server"
      summary: "create config certificates for the specified project, project version,\
        \ service, service version and environment."
      operationId: "postServiceCertificates"
      description: "create config certificates for the specified project, project\
        \ version, service, service version and environment."
      parameters:
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Create Certificates"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    put:
      tags:
      - "config-server"
      summary: "update config certificates for the specified project, project version,\
        \ service, service version and environment."
      operationId: "putServiceCertificates"
      description: "update config certificates for the specified project, project\
        \ version, service, service version and environment."
      parameters:
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Update Certificates"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    delete:
      tags:
      - "config-server"
      summary: "Delete service certificates for the specified project, project version,\
        \ service, service version and environment."
      operationId: "deleteServiceCertificates"
      description: "Delete service certificates for the specified project, project\
        \ version, service, service version and environment."
      parameters:
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Certificates"
        "400":
          description: "Invalid Certificates Delete Request"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
  /files/{project_name}/{project_version}/{service_name}/{service_version}/{environment}:
    get:
      tags:
      - "config-server"
      summary: "Get config files for the specified project, project version, service,\
        \ service version and environment."
      operationId: "getServiceFiles"
      description: "Get config files for the specified project, project version, service,\
        \ service version and environment. File content is returned as Base64 encoded."
      parameters:
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Returns config files for the specified project, project version,\
            \ service, service version and environment. File content is returned as\
            \ Base64 encoded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    post:
      tags:
      - "config-server"
      summary: "create config files for the specified project, project version, service,\
        \ service version and environment."
      operationId: "postServiceFiles"
      description: "create config files for the specified project, project version,\
        \ service, service version and environment."
      parameters:
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Create Files"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    put:
      tags:
      - "config-server"
      summary: "update config files for the specified project, project version, service,\
        \ service version and environment."
      operationId: "putServiceFiles"
      description: "update config files for the specified project, project version,\
        \ service, service version and environment."
      parameters:
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful Update Certificates"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceConfigs"
        "400":
          description: "bad input parameter"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
    delete:
      tags:
      - "config-server"
      summary: "Delete service files for the specified project, project version, service,\
        \ service version and environment."
      operationId: "deleteServiceFiles"
      description: "Delete service files for the specified project, project version,\
        \ service, service version and environment."
      parameters:
      - in: "path"
        name: "project_name"
        description: "project name for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "project_version"
        description: "Project version for the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_name"
        description: "Service name of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "service_version"
        description: "Version of the registered service"
        required: true
        schema:
          type: "string"
      - in: "path"
        name: "environment"
        description: "Environment of the registered service"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "Successful Delete Certificates"
        "400":
          description: "Invalid Certificates Delete Request"
      security:
      - portal_auth:
        - "A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2"
components:
  securitySchemes:
    portal_auth:
      type: "oauth2"
      flows:
        clientCredentials:
          tokenUrl: "https://lightapi.net/token"
          scopes:
            A8E73740C0041C03D67C3A951AA1D7533C8F9F2FB57D7BA107210B9BC9E06DA2: "default"
  schemas:
    UnauthorizedError:
      type: "object"
      properties:
        message:
          type: "string"
          example: "Not authorized"
    NotFoundError:
      type: "object"
      properties:
        message:
          type: "string"
          example: "Not found"
    Service:
      type: "object"
      required:
      - "projectName"
      - "projectVersion"
      - "serviceName"
      - "serviceVersion"
      - "environment"
      properties:
        projectName:
          type: "string"
          description: "Project name for the registered service"
          example: "ECIF"
        projectVersion:
          type: "string"
          description: "Project version for the registered service"
          example: "v1"
        serviceName:
          type: "string"
          description: "Service Name of the registered service"
          example: "party-address"
        serviceVersion:
          type: "string"
          description: "service Version of the registered service"
          example: "v1"
        environment:
          type: "string"
          description: "Environment of the registered service"
          example: "DIT1"
    ServiceConfigs:
      type: "object"
      required:
      - "service"
      properties:
        service:
          type: "Service"
          $ref: "#/components/schemas/Service"
        configProperties:
          type: "object"
          description: "Key-Value pairs of the config properties"
          additionalProperties: true
    Status:
      type: "object"
      properties:
        statusCode:
          type: "integer"
        code:
          type: "string"
        message:
          type: "string"
        description:
          type: "string"
        severity:
          type: "string"
      required:
      - "statusCode"
      - "code"
      - "message"
      - "description"
