{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "Light Config Server",
      "url": "https://config.neworknt.com"
    }
  ],
  "info": {
    "description": "Light Config Server API",
    "version": "1.0.0",
    "title": "Light Config Server API",
    "contact": {
      "email": "santosh.aherkar@gmail.com"
    }
  },
  "tags": [
    {
      "name": "config-server",
      "description": "Operations available in config server"
    }
  ],
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/services": {
      "get": {
        "tags": [
          "config-server"
        ],
        "summary": "Search for registered services in the config server",
        "operationId": "searchServices",
        "description": "Search for registered services in the config server",
        "parameters": [
          {
            "in": "query",
            "name": "project_name",
            "description": "an optional project name for filtering services",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "project_version",
            "description": "an optional project version for filtering services",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "service_name",
            "description": "an optional service name for filtering services",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "service_version",
            "description": "an optional service version for filtering services",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment",
            "description": "an optional environment for filtering services",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "record offset for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "record limit for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of registered services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/configs/{project_name}/{project_version}/{service_name}/{service_version}/{environment}": {
      "get": {
        "tags": [
          "config-server"
        ],
        "summary": "Get service configs values.yml properties for the specified project, project version, service, service version and environment.",
        "operationId": "getServiceConfigs",
        "description": "Get service configs for the specified project, project version, service, service version and environment.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns service configs for the specified project, project version, service, service version and environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfigs"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "config-server"
        ],
        "summary": "Update config values.yml properties for the specified project, project version, service, service version and environment.",
        "operationId": "patchServiceConfigs",
        "description": "Update config values.yml properties for the specified project, project version, service, service version and environment.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns service configs for the specified project, project version, service, service version and environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfigs"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "config-server"
        ],
        "summary": "create config values.yml properties for the specified project, project version, service, service version and environment.",
        "operationId": "patchServiceConfigs",
        "description": "create config values.yml properties for the specified project, project version, service, service version and environment.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns service configs for the specified project, project version, service, service version and environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfigs"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "config-server"
        ],
        "summary": "Delete service configs values.yml for the specified project, project version, service, service version and environment.",
        "operationId": "deleteServiceConfigs",
        "description": "Delete service configs for the specified project, project version, service, service version and environment.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Delete Config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Config Delete Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "404": {
            "description": "Config not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/certs/{project_name}/{project_version}/{service_name}/{service_version}/{environment}": {
      "get": {
        "tags": [
          "config-server"
        ],
        "summary": "Get certificates for the specified project, project version, service, service version and environment.",
        "operationId": "getServiceCertificates",
        "description": "Get certificates for the specified project, project version, service, service version and environment. File content is returned as Base64 encoded.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns certificates for the specified project, project version, service, service version and environment. File content is returned as Base64 encoded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfigs"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "config-server"
        ],
        "summary": "Delete service certificates for the specified project, project version, service, service version and environment.",
        "operationId": "deleteServiceCertificates",
        "description": "Delete service certificates for the specified project, project version, service, service version and environment.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Delete Certificates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Certificates Delete Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "404": {
            "description": "Certificates not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/files/{project_name}/{project_version}/{service_name}/{service_version}/{environment}": {
      "get": {
        "tags": [
          "config-server"
        ],
        "summary": "Get config files for the specified project, project version, service, service version and environment.",
        "operationId": "getServiceFiles",
        "description": "Get config files for the specified project, project version, service, service version and environment. File content is returned as Base64 encoded.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns config files for the specified project, project version, service, service version and environment. File content is returned as Base64 encoded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfigs"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "config-server"
        ],
        "summary": "Delete service files for the specified project, project version, service, service version and environment.",
        "operationId": "deleteServiceFiles",
        "description": "Delete service files for the specified project, project version, service, service version and environment.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Delete Files",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Files Delete Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          },
          "404": {
            "description": "Files not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/{project_name}/{project_version}/{service_name}/{service_version}/{environment}": {
      "patch": {
        "tags": [
          "config-server"
        ],
        "summary": "create or update config files/certs/configs for the specified project, project version, service, service version and environment.",
        "operationId": "patchAllConfigs",
        "description": "create or update config files/certs/configs for the specified project, project version, service, service version and environment.",
        "parameters": [
          {
            "in": "path",
            "name": "project_name",
            "description": "project name for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "project_version",
            "description": "Project version for the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_name",
            "description": "Service name of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "service_version",
            "description": "Version of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment",
            "description": "Environment of the registered service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns config files for the specified project, project version, service, service version and environment. File content is returned as Base64 encoded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfigs"
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "Service": {
        "type": "object",
        "required": [
          "projectName",
          "projectVersion",
          "serviceName",
          "serviceVersion",
          "environment"
        ],
        "properties": {
          "projectName": {
            "type": "string",
            "description": "Project name for the registered service",
            "example": "ECIF"
          },
          "projectVersion": {
            "type": "string",
            "description": "Project version for the registered service",
            "example": "v1"
          },
          "serviceName": {
            "type": "string",
            "description": "Service Name of the registered service",
            "example": "party-address"
          },
          "serviceVersion": {
            "type": "string",
            "description": "service Version of the registered service",
            "example": "v1"
          },
          "environment": {
            "type": "string",
            "description": "Environment of the registered service",
            "example": "DIT1"
          }
        }
      },
      "ServiceConfigs": {
        "type": "object",
        "required": [
          "service"
        ],
        "properties": {
          "service": {
            "type": "Service",
            "$ref": "#/components/schemas/Service"
          },
          "configProperties": {
            "type": "object",
            "description": "Key-Value pairs of the config properties",
            "additionalProperties": true
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          }
        },
        "required": [
          "statusCode",
          "code",
          "message",
          "description"
        ]
      }
    }
  }
}