---
host: lightapi.net
service: oauth
schemas:
  createRefreshTokenRequest:
    title: Refresh Token
    type: object
    properties:
      hostId:
        type: string
        description: Host Id
      refreshToken:
        type: string
        description: Refresh Token
      userId:
        type: string
        description: User Id
      userType:
        type: string
        description: User Type
      roles:
        type: string
        description: Roles
      clientId:
        type: string
        description: Client Id
      scope:
        type: string
        description: Scope
      csrf:
        type: string
        description: csrf token
    required:
    - hostId
    - refreshToken
    - userId
    - clientId
    - scope
    - csrf
  deleteRefreshTokenRequest:
    title: Refresh Token
    type: object
    properties:
      refreshToken:
        type: string
        description: Refresh Token
      hostId:
        type: string
        description: Host Id
      userId:
        type: string
        description: User Id
    required:
    - refreshToken
    - hostId
    - userId
  createAuthCodeRequest:
    title: Auth Code
    type: object
    properties:
      hostId:
        type: string
        description: Host Id
      authCode:
        type: string
        description: Auth Code
      redirectUri:
        type: string
        description: Redirect Uri
      remember:
        type: string
        description: Remember Session
    required:
    - hostId
    - authCode
    - redirectUri
    - remember
  deleteAuthCodeRequest:
    title: Auth Code
    type: object
    properties:
      authCode:
        type: string
        description: Auth Code
      hostId:
        type: string
        description: Host Id
    required:
    - authCode
    - hostId
  createRefTokenRequest:
    title: Reference Token
    type: object
    properties:
      host:
        type: string
        description: Host
      refToken:
        type: string
        description: Reference Token
      jwt:
        type: string
        description: Jwt Token
      clientId:
        type: string
        description: Client Id
    required:
    - host
    - refToken
    - jwt
    - clientId
  deleteRefTokenRequest:
    title: Reference Token
    type: object
    properties:
      refToken:
        type: string
        description: Reference Token
      host:
        type: string
        description: Host
    required:
    - refToken
    - host
  createProviderRequest:
    title: OAuth Provider
    type: object
    properties:
      host:
        type: string
        description: Host
      providerId:
        type: string
        description: Provider Id
      providerName:
        type: string
        description: Provider Name
      serverUrl:
        type: string
        description: Server Url
      uri:
        type: string
        description: Uri
    required:
    - host
    - providerId
    - providerName
    - serverUrl
  updateProviderRequest:
    title: OAuth Provider
    type: object
    properties:
      host:
        type: string
        description: Host
      providerId:
        type: string
        description: Provider Id
        readonly: true
      providerName:
        type: string
        description: Provider Name
      serverUrl:
        type: string
        description: Server Url
      uri:
        type: string
        description: Uri
    required:
    - host
    - providerId
    - providerName
    - serverUrl
  deleteProviderRequest:
    title: OAuth Provider
    type: object
    properties:
      providerId:
        type: string
        description: Provider Id
      host:
        type: string
        description: Host
    required:
    - providerId
    - host
action:
- name: createRefreshToken
  version: 0.1.0
  handler: CreateRefreshToken
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/createRefreshTokenRequest'
    example: 
      hostId: host123
      refreshToken: "refresh_token_123"
      userId: user123
      userType: "customer"
      roles: "user"
      clientId: client123
      scope: test.r
      csrf: "csrf_token_123"
- name: deleteRefreshToken
  version: 0.1.0
  handler: DeleteRefreshToken
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/deleteRefreshTokenRequest'
    example: 
      refreshToken: "refresh_token_123"
      hostId: host123
      userId: user123
- name: createAuthCode
  version: 0.1.0
  handler: CreateAuthCode
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/createAuthCodeRequest'
    example: 
      hostId: host123
      authCode: "auth_code_123"
      redirectUri: "example.com"
      remember: "true"
- name: deleteAuthCode
  version: 0.1.0
  handler: DeleteAuthCode
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/deleteAuthCodeRequest'
    example: 
      authCode: "auth_code_123"
      hostId: host123
- name: createRefToken
  version: 0.1.0
  handler: CreateRefToken
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/createRefTokenRequest'
    example: 
      host: host123
      refToken: "ref_token_123"
      jwt: "jwt_token_123"
      clientId: client123
- name: deleteRefToken
  version: 0.1.0
  handler: DeleteRefToken
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/deleteRefTokenRequest'
    example: 
      refToken: "ref_token_123"
      host: host123
- name: createProvider
  version: 0.1.0
  handler: CreateProvider
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/createProviderRequest'
    example: 
      host: "lightapi.net"
      providerId: "provider123"
      providerName: "My OAuth Provider"
      serverUrl: "example.com"
      uri: "example.com"
- name: updateProvider
  version: 0.1.0
  handler: UpdateProvider
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/updateProviderRequest'
    example: 
      host: "lightapi.net"
      providerId: "provider123"
      providerName: "Updated Provider Name"
      serverUrl: "example.com"
      uri: "example.com"
- name: deleteProvider
  version: 0.1.0
  handler: DeleteProvider
  scope: portal.w
  request:
    schema:
      $ref: '#/schemas/deleteProviderRequest'
    example: 
      providerId: "provider123"
      host: "lightapi.net"
