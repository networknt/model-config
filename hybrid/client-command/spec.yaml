---
host: "lightapi.net"
service: "client"
schemas:
  createAppRequest:
    title: "Service"
    type: "object"
    properties:
      hostId:
        type: "string"
        description: "Host Id"
      appId:
        type: "string"
        description: "App Id"
      appName:
        type: "string"
        description: "App Name"
      appDesc:
        type: "string"
        description: "App Desc"
      isKafkaApp:
        type: "boolean"
        description: "Is Kafka App"
      operationOwner:
        type: "string"
        description: "Operation Owner"
      deliveryOwner:
        type: "string"
        description: "Delivery Owner"
    required:
    - "hostId"
    - "appId"
    - "appName"
  updateAppRequest:
    title: "Service"
    type: "object"
    properties:
      hostId:
        type: "string"
        description: "Host Id"
      appId:
        type: "string"
        description: "App Id"
      appName:
        type: "string"
        description: "App Name"
      appDesc:
        type: "string"
        description: "App Desc"
      isKafkaApp:
        type: "boolean"
        description: "Is Kafka App"
      operationOwner:
        type: "string"
        description: "Operation Owner"
      deliveryOwner:
        type: "string"
        description: "Delivery Owner"
    required:
    - "hostId"
    - "appId"
    - "appName"
  deleteAppRequest:
    title: "Service"
    type: "object"
    properties:
      hostId:
        type: "string"
        description: "Host Id"
      appId:
        type: "string"
        description: "App Id"
    required:
    - "hostId"
    - "appId"
  createClientRequest:
    title: "Service"
    type: "object"
    properties:
      hostId:
        type: "string"
        description: "Host Id"
      appId:
        type: "string"
        description: "App Id"
      clientId:
        type: "string"
        description: "Client Id"
      clientType:
        type: "string"
        description: "Client Type"
      clientProfile:
        type: "string"
        description: "Client Profile"
      clientSecret:
        type: "string"
        description: "Client Secret"
      clientScope:
        type: "string"
        description: "Client Scope"
      customClaim:
        title: "Custom Claim"
        type: "string"
      redirectUri:
        title: "Redirect URI"
        type: "string"
      authenticateClass:
        title: "Authenticate Class"
        type: "string"
      deRefClientId:
        title: "Dereference Client ID"
        type: "string"
    required:
    - "hostId"
    - "appId"
    - "clientId"
    - "clientType"
    - "clientProfile"
    - "clientSecret"
  updateClientRequest:
    title: "Service"
    type: "object"
    properties:
      hostId:
        type: "string"
        description: "Host Id"
      appId:
        type: "string"
        description: "App Id"
      clientId:
        type: "string"
        description: "Client Id"
      clientType:
        type: "string"
        description: "Client Type"
      clientProfile:
        type: "string"
        description: "Client Profile"
      clientSecret:
        type: "string"
        description: "Client Secret"
      clientScope:
        type: "string"
        description: "Client Scope"
      customClaim:
        title: "Custom Claim"
        type: "string"
      redirectUri:
        title: "Redirect URI"
        type: "string"
      authenticateClass:
        title: "Authenticate Class"
        type: "string"
      deRefClientId:
        title: "Dereference Client ID"
        type: "string"
    required:
    - "hostId"
    - "appId"
    - "clientId"
    - "clientType"
    - "clientProfile"
    - "clientSecret"
  deleteClientRequest:
    title: "Service"
    type: "object"
    properties:
      hostId:
        type: "string"
        description: "Host Id"
      clientId:
        type: "string"
        description: "Client Id"
    required:
    - "hostId"
    - "clientId"
action:
- name: "createApp"
  version: "0.1.0"
  handler: "CreateApp"
  scope: "portal.w"
  request:
    schema:
      $ref: "#/schemas/createAppRequest"
    example:
      hostId: "host123"
      appId: "app123"
      appName: "petstore app"
- name: "updateApp"
  version: "0.1.0"
  handler: "UpdateApp"
  scope: "portal.w"
  request:
    schema:
      $ref: "#/schemas/updateAppRequest"
    example:
      hostId: "host123"
      appId: "app123"
      appName: "petstore app"
- name: "deleteApp"
  version: "0.1.0"
  handler: "DeleteApp"
  scope: "portal.w"
  request:
    schema:
      $ref: "#/schemas/deleteAppRequest"
    example:
      hostId: "host123"
      appId: "app123"
- name: "createClient"
  version: "0.1.0"
  handler: "CreateClient"
  scope: "portal.w"
  request:
    schema:
      $ref: "#/schemas/createClientRequest"
    example:
      hostId: "host123"
      appId: "app123"
      clientId: "client123"
      clientType: "confidential"
      clientProfile: "service"
      clientSecret: "secret"
- name: "updateClient"
  version: "0.1.0"
  handler: "UpdateClient"
  scope: "portal.w"
  request:
    schema:
      $ref: "#/schemas/updateClientRequest"
    example:
      hostId: "host123"
      appId: "app123"
      clientId: "client123"
      clientType: "confidential"
      clientProfile: "service"
      clientSecret: "secret"
- name: "deleteClient"
  version: "0.1.0"
  handler: "DeleteClient"
  scope: "portal.w"
  request:
    schema:
      $ref: "#/schemas/deleteClientRequest"
    example:
      hostId: "host123"
      clientId: "client123"
